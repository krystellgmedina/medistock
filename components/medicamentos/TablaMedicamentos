import React from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from "@/components/ui/table";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Edit, Trash2, Package, AlertTriangle } from "lucide-react";
import { format, differenceInDays } from "date-fns";
import { es } from "date-fns/locale";

export default function TablaMedicamentos({ medicamentos, onEdit, onDelete, isLoading }) {
  const getExpirationStatus = (fechaExpiracion) => {
    const today = new Date();
    const expirationDate = new Date(fechaExpiracion);
    const daysUntilExpiration = differenceInDays(expirationDate, today);

    if (daysUntilExpiration < 0) {
      return { status: "expired", label: "Vencido", className: "bg-red-100 text-red-800 border-red-300" };
    } else if (daysUntilExpiration <= 30) {
      return { status: "warning", label: "Por vencer", className: "bg-yellow-100 text-yellow-800 border-yellow-300" };
    } else {
      return { status: "valid", label: "Vigente", className: "bg-green-100 text-green-800 border-green-300" };
    }
  };

  const getCategoryColor = (categoria) => {
    const colors = {
      "Analgésicos": "bg-blue-100 text-blue-800",
      "Antibióticos": "bg-purple-100 text-purple-800",
      "Antiinflamatorios": "bg-orange-100 text-orange-800",
      "Antihipertensivos": "bg-pink-100 text-pink-800",
      "Antihistamínicos": "bg-cyan-100 text-cyan-800",
      "Vitaminas": "bg-green-100 text-green-800",
      "Suplementos": "bg-lime-100 text-lime-800",
      "Otros": "bg-gray-100 text-gray-800"
    };
    return colors[categoria] || "bg-gray-100 text-gray-800";
  };

  if (isLoading) {
    return (
      <Card className="border-gray-200 shadow-lg">
        <CardHeader className="bg-gradient-to-r from-gray-50 to-gray-100 border-b">
          <CardTitle className="flex items-center gap-2 text-gray-900">
            <Package className="w-5 h-5" />
            Inventario de Medicamentos
          </CardTitle>
        </CardHeader>
        <CardContent className="p-6">
          <div className="text-center py-8">
            <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto"></div>
            <p className="mt-4 text-gray-500">Cargando medicamentos...</p>
          </div>
        </CardContent>
      </Card>
    );
  }

  return (
    <Card className="border-gray-200 shadow-lg">
      <CardHeader className="bg-gradient-to-r from-gray-50 to-gray-100 border-b">
        <CardTitle className="flex items-center gap-2 text-gray-900">
          <Package className="w-5 h-5" />
          Inventario de Medicamentos
          <Badge variant="secondary" className="ml-auto">
            {medicamentos.length} {medicamentos.length === 1 ? 'medicamento' : 'medicamentos'}
          </Badge>
        </CardTitle>
      </CardHeader>
      <CardContent className="p-0">
        {medicamentos.length === 0 ? (
          <div className="text-center py-12">
            <Package className="w-16 h-16 mx-auto text-gray-300 mb-4" />
            <p className="text-gray-500 text-lg">No se encontraron medicamentos</p>
            <p className="text-gray-400 text-sm mt-2">Agrega un nuevo medicamento para comenzar</p>
          </div>
        ) : (
          <div className="overflow-x-auto">
            <Table>
              <TableHeader>
                <TableRow className="bg-gray-50">
                  <TableHead className="font-semibold text-gray-700">Nombre</TableHead>
                  <TableHead className="font-semibold text-gray-700">Categoría</TableHead>
                  <TableHead className="font-semibold text-gray-700">Cantidad</TableHead>
                  <TableHead className="font-semibold text-gray-700">Fecha Expiración</TableHead>
                  <TableHead className="font-semibold text-gray-700">Estado</TableHead>
                  <TableHead className="font-semibold text-gray-700 text-right">Acciones</TableHead>
                </TableRow>
              </TableHeader>
              <TableBody>
                {medicamentos.map((medicamento) => {
                  const expirationStatus = getExpirationStatus(medicamento.fecha_expiracion);
                  return (
                    <TableRow key={medicamento.id} className="hover:bg-gray-50 transition-colors">
                      <TableCell className="font-medium text-gray-900">{medicamento.nombre}</TableCell>
                      <TableCell>
                        <Badge variant="secondary" className={getCategoryColor(medicamento.categoria)}>
                          {medicamento.categoria}
                        </Badge>
                      </TableCell>
                      <TableCell>
                        <span className={`font-semibold ${medicamento.cantidad < 10 ? 'text-red-600' : 'text-gray-900'}`}>
                          {medicamento.cantidad}
                        </span>
                        {medicamento.cantidad < 10 && (
                          <AlertTriangle className="w-4 h-4 inline ml-1 text-red-600" />
                        )}
                      </TableCell>
                      <TableCell className="text-gray-600">
                        {format(new Date(medicamento.fecha_expiracion), "dd 'de' MMMM, yyyy", { locale: es })}
                      </TableCell>
                      <TableCell>
                        <Badge variant="outline" className={expirationStatus.className}>
                          {expirationStatus.label}
                        </Badge>
                      </TableCell>
                      <TableCell className="text-right">
                        <div className="flex justify-end gap-2">
                          <Button
                            variant="outline"
                            size="icon"
                            onClick={() => onEdit(medicamento)}
                            className="hover:bg-blue-50 hover:border-blue-300"
                          >
                            <Edit className="w-4 h-4 text-blue-600" />
                          </Button>
                          <Button
                            variant="outline"
                            size="icon"
                            onClick={() => onDelete(medicamento)}
                            className="hover:bg-red-50 hover:border-red-300"
                          >
                            <Trash2 className="w-4 h-4 text-red-600" />
                          </Button>
                        </div>
                      </TableCell>
                    </TableRow>
                  );
                })}
              </TableBody>
            </Table>
          </div>
        )}
      </CardContent>
    </Card>
  );
}